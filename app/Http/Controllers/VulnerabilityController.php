<?php

namespace App\Http\Controllers;

use App\Models\Vulnerability;
use App\Models\Asset;
use App\Models\Software;
use App\Models\Cve;
use Illuminate\Http\Request;

class VulnerabilityController extends Controller
{
    public function index()
    {
        $vulnerabilities = Vulnerability::orderBy('id', 'ASC')->with(['asset', 'software', 'cve'])->get(); //
        return view('vulnerabilities.index', compact('vulnerabilities'));
    }

    public function create()
    {
        $assets = Asset::all();
        $softwares = Software::all();
        $cves = Cve::all();
        return view('vulnerabilities.form', compact('assets', 'softwares', 'cves'));
    }

    public function store(Request $request)
    {
        $request->validate([
            'asset_id' => 'required|exists:assets,id',
            'software_id' => 'required|exists:softwares,id',
            'cve_id' => 'required|exists:cves,id',
            'estado' => 'required|in:pendiente,aceptado,en remediacion,remediado',
            'fecha_detectada' => 'required|date',
        ]);

        Vulnerability::create($request->all());
        return redirect()->route('vulnerabilities.index')->with('success', 'Vulnerabilidad registrada correctamente.');
    }

    public function edit(Vulnerability $vulnerability)
    {
        $assets = Asset::all();
        $softwares = Software::all();
        $cves = Cve::all();
        return view('vulnerabilities.form', compact('vulnerability', 'assets', 'softwares', 'cves'));
    }

    public function update(Request $request, Vulnerability $vulnerability)
    {
        $request->validate([
            'asset_id' => 'required|exists:assets,id',
            'software_id' => 'required|exists:softwares,id',
            'cve_id' => 'required|exists:cves,id',
            'estado' => 'required|in:pendiente,aceptado,en remediacion,remediado',
            'fecha_detectada' => 'required|date',
        ]);

        $vulnerability->update($request->all());
        return redirect()->route('vulnerabilities.index')->with('success', 'Vulnerabilidad actualizada correctamente.');
    }

    public function destroy(Vulnerability $vulnerability)
    {
        $vulnerability->delete();
        return redirect()->route('vulnerabilities.index')->with('success', 'Vulnerabilidad eliminada correctamente.');
    }
}
